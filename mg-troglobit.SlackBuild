#!/bin/sh -e

# Slackware build script for Joachim Nilsson (troglobit)'s fork of OpenBSD Mg
# saidone@saidone.org revision date 2019/08/11
# license (of this script and its accessories, not that of the application it will build): see LICENSE

APP=mg-troglobit
VERSION=${VERSION:-3.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$APP
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686 -Wno-unused-result"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686 -Wno-unused-result"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -Wno-unused-result"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2 -Wno-unused-result"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $APP-$VERSION
tar xvf $CWD/${APP/troglobit/}$VERSION.tar.gz
mv ${APP/troglobit/}$VERSION $APP-$VERSION
cd $APP-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# override SLKCFLAGS if CFLAGS is set
if [ -n "$(echo $CFLAGS|tr -d '[:space:]')" ]; then SLKCFLAGS="$CFLAGS"; fi

SLKCFLAGS="$SLKCFLAGS -lcurses"

CFLAGS="$SLKCFLAGS" \
  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --docdir=/usr/doc/$APP-$VERSION \
    --build=$ARCH-slackware-linux \
    
make

make install PREFIX=/usr DESTDIR=$PKG

mkdir -p $PKG/usr/doc/$APP-$VERSION
cat $CWD/$APP.SlackBuild > $PKG/usr/doc/$APP-$VERSION/$APP.SlackBuild
find $PKG/usr/doc/$APP-$VERSION -type f -exec chmod 644 {} \;

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

if [ -e $CWD/doinst.sh ]; then
    cp $CWD/doinst.sh $PKG/install
fi

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $(find . -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done
  ) 
fi

if [ -d $PKG/usr/info ]; then
  gzip -9 $PKG/usr/info/*.info
  rm -f $PKG/usr/info/dir
fi

rm $PKG/usr/doc/$APP-$VERSION/*.md

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$APP-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
